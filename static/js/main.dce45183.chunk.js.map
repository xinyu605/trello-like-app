{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["AddList","state","isEditing","pendingValue","clickAddList","setState","clickClose","changeInput","event","currentTarget","value","checkInput","preventDefault","props","insertInput","this","className","id","onClick","type","onChange","React","Component","App","list","content","updateList","push","name","console","log","showList","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAGMA,G,kNACJC,MAAQ,CACNC,WAAW,EACXC,aAAc,I,EAEhBC,aAAe,WACb,EAAKC,SAAS,CAAEH,WAAW,K,EAG7BI,WAAa,WACX,EAAKD,SAAS,CAAEH,WAAW,K,EAG7BK,YAAc,SAACC,GACb,EAAKH,SAAS,CAAEF,aAAcK,EAAMC,cAAcC,S,EAGpDC,WAAa,SAACH,GACZA,EAAMI,iBACN,EAAKC,MAAMC,YAAY,EAAKb,MAAME,e,uDAKlC,OAA6B,IAAzBY,KAAKd,MAAMC,UAEX,iCACE,2CACA,wBAAQc,UAAU,SAASC,GAAG,SAASC,QAASH,KAAKX,aAArD,yBAOF,iCACE,2CACA,uBACEe,KAAK,OACLF,GAAG,eACHP,MAAOK,KAAKd,MAAME,aAClBiB,SAAUL,KAAKR,cAEjB,wBACEY,KAAK,SACLH,UAAU,SACVC,GAAG,SACHC,QAASH,KAAKJ,WAJhB,sBAQA,wBAAQK,UAAU,SAASC,GAAG,cAAcC,QAASH,KAAKT,WAA1D,sB,GAnDYe,IAAMC,YAyFbC,E,4MA5BbtB,MAAQ,CACNuB,KAAM,I,EAGRV,YAAc,SAACW,GAEb,IAAMC,EAAa,EAAKzB,MAAMuB,KAC9BE,EAAWC,KAAK,CAAEC,KAAMH,IACxB,EAAKpB,SAAS,CAAEmB,KAAME,K,uDAItB,IAAIF,EAAOT,KAAKd,MAAMuB,KACtBK,QAAQC,IAAIN,GACZ,IAAIO,EAKJ,OAJAA,EAAWP,EAAKQ,KAAI,SAACC,GACnB,OAAO,6BAAKA,EAAKL,UAEnBC,QAAQC,IAAIC,GAEV,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,CAASQ,KAAMT,KAAKd,MAAMuB,KAAMV,YAAaC,KAAKD,cAClD,6BAAKiB,W,GAvBKV,IAAMC,WCnDTY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dce45183.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass AddList extends React.Component {\n  state = {\n    isEditing: false,\n    pendingValue: \"\",\n  };\n  clickAddList = () => {\n    this.setState({ isEditing: true });\n  };\n\n  clickClose = () => {\n    this.setState({ isEditing: true });\n  };\n\n  changeInput = (event) => {\n    this.setState({ pendingValue: event.currentTarget.value });\n  };\n\n  checkInput = (event) => {\n    event.preventDefault();\n    this.props.insertInput(this.state.pendingValue);\n  };\n\n  render() {\n    // console.log(this.props);\n    if (this.state.isEditing === false) {\n      return (\n        <form>\n          <h2>Phase 1-1</h2>\n          <button className=\"button\" id=\"addBtn\" onClick={this.clickAddList}>\n            Add List\n          </button>\n        </form>\n      );\n    } else {\n      return (\n        <form>\n          <h2>Phase 1-1</h2>\n          <input\n            type=\"text\"\n            id=\"inputContent\"\n            value={this.state.pendingValue}\n            onChange={this.changeInput}\n          ></input>\n          <button\n            type=\"submit\"\n            className=\"button\"\n            id=\"addBtn\"\n            onClick={this.checkInput}\n          >\n            Add List\n          </button>\n          <button className=\"button\" id=\"closeButton\" onClick={this.clickClose}>\n            X\n          </button>\n        </form>\n      );\n    }\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    list: [],\n  };\n\n  insertInput = (content) => {\n    // console.log(content);\n    const updateList = this.state.list;\n    updateList.push({ name: content });\n    this.setState({ list: updateList });\n  };\n\n  render() {\n    let list = this.state.list;\n    console.log(list);\n    let showList = null;\n    showList = list.map((item) => {\n      return <li>{item.name}</li>;\n    });\n    console.log(showList);\n    return (\n      <div className=\"App\">\n        <AddList list={this.state.list} insertInput={this.insertInput} />\n        <ul>{showList}</ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}