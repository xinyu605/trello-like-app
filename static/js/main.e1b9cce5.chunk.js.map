{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["InputForm","state","isEditing","value","handleChange","event","setState","target","handleSubmit","preventDefault","props","addTask","handleOpen","handleClose","this","onSubmit","className","onClick","type","id","onChange","React","Component","Todo","name","AddCard","showTypeArea","hideTypeArea","App","data","handleAddTask","content","console","log","newData","push","length","completed","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAGMA,G,kNACJC,MAAQ,CACNC,WAAW,EACXC,MAAO,I,EAGTC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,MAAOE,EAAME,OAAOJ,S,EAGtCK,aAAe,SAACH,GACdA,EAAMI,iBACN,EAAKC,MAAMC,QAAQ,EAAKV,MAAME,OAC9B,EAAKG,SAAS,CAAEH,MAAO,M,EAGzBS,WAAa,WACX,EAAKN,SAAS,CAAEJ,WAAW,K,EAG7BW,YAAc,WACZ,EAAKP,SAAS,CAAEJ,WAAW,K,uDAI3B,OAA6B,IAAzBY,KAAKb,MAAMC,UAEX,uBAAMa,SAAUD,KAAKN,aAArB,UACE,2CACA,wBAAQQ,UAAU,SAASC,QAASH,KAAKF,WAAzC,2BAOF,uBAAMG,SAAUD,KAAKN,aAArB,UACE,2CACA,uBACEU,KAAK,OACLC,GAAG,eACHH,UAAU,YACVb,MAAOW,KAAKb,MAAME,MAClBiB,SAAUN,KAAKV,eAEjB,wBAAQc,KAAK,SAASF,UAAU,SAAhC,wBAGA,wBAAQA,UAAU,SAASC,QAASH,KAAKD,YAAzC,sB,GAhDcQ,IAAMC,YAyDxBC,EAAO,SAACb,GAEZ,OACE,qBAAIM,UAAU,OAAd,UACE,qBAAKA,UAAU,YAAf,SACE,gCAAQN,EAAMc,SAEhB,cAAC,EAAD,QAKAC,E,4MACJxB,MAAQ,CAAEC,WAAW,G,EAErBwB,aAAe,WACb,EAAKpB,SAAS,CAAEJ,WAAW,K,EAG7ByB,aAAe,WACb,EAAKrB,SAAS,CAAEJ,WAAW,K,EAG7BM,aAAe,SAACH,GACdA,EAAMI,kB,uDAIN,OAA6B,IAAzBK,KAAKb,MAAMC,UAEX,qBAAKc,UAAU,WAAf,SACE,wBAAQA,UAAU,SAASC,QAASH,KAAKY,aAAzC,4BAOF,uBAAMX,SAAUD,KAAKN,aAArB,UACE,uBAAOU,KAAK,OAAOF,UAAU,cAC7B,sBAAKA,UAAU,WAAf,UACE,wBAAQA,UAAU,SAAlB,0BACA,wBAAQA,UAAU,SAASC,QAASH,KAAKa,aAAzC,yB,GA9BUN,IAAMC,WA8EbM,E,4MApCb3B,MAAQ,CACN4B,KAAM,I,EAGRC,cAAgB,SAACC,GACfC,QAAQC,IAAIF,GACZ,IAAIG,EAAU,EAAKjC,MAAM4B,KACzBK,EAAQC,KAAK,CACXhB,GAAI,EAAKlB,MAAM4B,KAAKO,OACpBZ,KAAMO,EACNM,WAAW,IAEb,EAAK/B,SAAS4B,I,uDAMd,OAFAF,QAAQC,IAAInB,KAAKb,OAGf,sBAAKe,UAAU,MAAf,UACE,cAAC,EAAD,CAAWL,QAASG,KAAKgB,gBACzB,oBAAId,UAAU,WAAd,SACGF,KAAKb,MAAM4B,KAAKS,KAAI,SAACC,GAAD,OACnB,cAAC,EAAD,CACEf,KAAMe,EAAKf,KACXa,UAAWE,EAAKF,UAChBlB,GAAIoB,EAAKpB,IACJoB,EAAKpB,gB,GA5BNE,IAAMC,WCrGTkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e1b9cce5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass InputForm extends React.Component {\n  state = {\n    isEditing: false,\n    value: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addTask(this.state.value);\n    this.setState({ value: \"\" });\n  };\n\n  handleOpen = () => {\n    this.setState({ isEditing: true });\n  };\n\n  handleClose = () => {\n    this.setState({ isEditing: false });\n  };\n\n  render() {\n    if (this.state.isEditing === false) {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <h2>Phase 2-1</h2>\n          <button className=\"button\" onClick={this.handleOpen}>\n            + Add List\n          </button>\n        </form>\n      );\n    } else {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <h2>Phase 1-2</h2>\n          <input\n            type=\"text\"\n            id=\"newTodoInput\"\n            className=\"inputText\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\" className=\"button\">\n            + Add List\n          </button>\n          <button className=\"button\" onClick={this.handleClose}>\n            X\n          </button>\n        </form>\n      );\n    }\n  }\n}\n\nconst Todo = (props) => {\n  // console.log(props);\n  return (\n    <li className=\"todo\">\n      <div className=\"boxWraper\">\n        <label>{props.name}</label>\n      </div>\n      <AddCard />\n    </li>\n  );\n};\n\nclass AddCard extends React.Component {\n  state = { isEditing: false };\n\n  showTypeArea = () => {\n    this.setState({ isEditing: true });\n  };\n\n  hideTypeArea = () => {\n    this.setState({ isEditing: false });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  render() {\n    if (this.state.isEditing === false) {\n      return (\n        <div className=\"btnGroup\">\n          <button className=\"button\" onClick={this.showTypeArea}>\n            + Add a card\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" className=\"inputText\"></input>\n          <div className=\"btnGroup\">\n            <button className=\"button\">+ Add a card</button>\n            <button className=\"button\" onClick={this.hideTypeArea}>\n              X\n            </button>\n          </div>\n        </form>\n      );\n    }\n  }\n}\n\n// function App() {\nclass App extends React.Component {\n  state = {\n    data: [],\n  };\n\n  handleAddTask = (content) => {\n    console.log(content);\n    let newData = this.state.data;\n    newData.push({\n      id: this.state.data.length,\n      name: content,\n      completed: false,\n    });\n    this.setState(newData);\n  };\n\n  render() {\n    console.log(this.state);\n    // console.log(this.state.data);\n    return (\n      <div className=\"App\">\n        <InputForm addTask={this.handleAddTask} />\n        <ul className=\"todoList\">\n          {this.state.data.map((item) => (\n            <Todo\n              name={item.name}\n              completed={item.completed}\n              id={item.id}\n              key={item.id}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}